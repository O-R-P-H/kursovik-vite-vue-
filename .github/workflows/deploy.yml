name: Backend Deployment

on:
  push:
    branches: backend
  workflow_dispatch:

jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Harbor registry
        uses: docker/login-action@v2
        with:
          registry: harbor.tsukawa.ru
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t harbor.tsukawa.ru/backseezer/backend:latest .
          docker push harbor.tsukawa.ru/backseezer/backend:latest

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            # Создаем рабочую директорию
            mkdir -p ~/backend_seezer
            cd ~/backend_seezer
            
            # Скачиваем актуальный docker-compose.yml
            curl -fsSL "https://raw.githubusercontent.com/O-R-P-H/kursovik-vite-vue/backend/docker-compose.yml" -o docker-compose.yml
            
            # Логинимся в Harbor
            echo "${{ secrets.HARBOR_PASSWORD }}" | docker login harbor.tsukawa.ru -u ${{ secrets.HARBOR_USERNAME }} --password-stdin
            
            # Безопасное удаление ТОЛЬКО контейнера бэкенда
            if docker ps -a --format '{{.Names}}' | grep -Eq '^main$'; then
              echo "Останавливаем и удаляем существующий контейнер main..."
              docker stop main || true
              docker rm main || true
            else
              echo "Контейнер main не найден, пропускаем удаление"
            fi
            
            # Удаляем ТОЛЬКО образ бэкенда (если существует)
            if docker images --format '{{.Repository}}' | grep -q 'harbor.tsukawa.ru/backseezer/backend'; then
              echo "Удаляем старый образ бэкенда..."
              docker rmi harbor.tsukawa.ru/backseezer/backend:latest || true
            fi
            
            # Получаем свежий образ
            docker compose pull main
            
            # Запускаем новый контейнер
            docker compose up -d --no-deps main
            
            # Проверяем состояние
            echo "Текущие контейнеры:"
            docker ps -a --filter "name=main" --format "table {{.ID}}\t{{.Names}}\t{{.Status}}"
            
            echo "Логи контейнера:"
            docker compose logs --tail=20 main

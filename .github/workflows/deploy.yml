name: Backend Deployment

on:
  push:
    branches: [backend]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.tsukawa.ru
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build and push
        run: |
          # Сборка с кэшированием
          docker buildx build \
            --push \
            --tag harbor.tsukawa.ru/backseezer/backend:latest \
            --tag harbor.tsukawa.ru/backseezer/backend:${{ github.sha }} \
            .

      - name: Clean old images (direct API call)
        run: |
          # Получаем список образов через Harbor API
          IMAGES=$(curl -s -u "${{ secrets.HARBOR_USERNAME }}:${{ secrets.HARBOR_PASSWORD }}" \
            "https://harbor.tsukawa.ru/api/v2.0/projects/backseezer/repositories/backend/artifacts" \
            | jq -r '.[] | select(.tags != null) | .digest')

          # Сохраняем последние 3 образа
          KEEP_IMAGES=$(echo "$IMAGES" | head -n 3)
          
          # Удаляем старые образы
          echo "$IMAGES" | tail -n +4 | while read digest; do
            echo "Deleting $digest"
            curl -X DELETE -u "${{ secrets.HARBOR_USERNAME }}:${{ secrets.HARBOR_PASSWORD }}" \
              "https://harbor.tsukawa.ru/api/v2.0/projects/backseezer/repositories/backend/artifacts/$digest"
          done

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            set -ex
            
            # Подготовка директории
            mkdir -p ~/backend_seezer
            cd ~/backend_seezer
            
            # docker-compose.yml
            cat > docker-compose.yml <<'EOL'
            services:
              main:
                image: harbor.tsukawa.ru/backseezer/backend:latest
                container_name: main
                ports:
                  - "3000:3000"
                restart: unless-stopped
                healthcheck:
                  test: ["CMD", "node", "-e", "require('http').request('http://localhost:3000', {timeout: 1000}, res => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1)).end()"]
                  interval: 30s
                  timeout: 10s
                  retries: 3
            EOL

            # Авторизация и деплой
            echo "${{ secrets.HARBOR_PASSWORD }}" | docker login harbor.tsukawa.ru -u ${{ secrets.HARBOR_USERNAME }} --password-stdin
            
            docker compose down -v --remove-orphans --timeout 30 || true
            docker pull harbor.tsukawa.ru/backseezer/backend:latest
            docker compose up -d --force-recreate
            
            # Ожидание запуска
            for i in {1..10}; do
              if docker compose ps --services | grep -q "healthy"; then
                break
              fi
              sleep 5
            done
            
            # Проверка состояния
            docker compose ps
            echo "Deployment successful!"

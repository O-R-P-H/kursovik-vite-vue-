name: Backend Deployment

on:
  push:
    branches: [backend]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: 'backend'  # Добавляем путь для checkout

      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.tsukawa.ru
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build and push Docker image
        run: |
          cd backend
          ls -la
          
          # Проверяем наличие ключевых файлов
          if [ ! -f tsconfig.json ]; then
            echo "Error: tsconfig.json not found!"
            exit 1
          fi
          
          docker build \
            --no-cache \
            -t harbor.tsukawa.ru/backseezer/backend:latest \
            .

          docker push harbor.tsukawa.ru/backseezer/backend:latest

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            set -e
            mkdir -p ~/backend_seezer
            cd ~/backend_seezer
            
            # Используем локальный docker-compose.yml вместо скачивания
            echo 'version: "3.8"
            services:
              main:
                image: harbor.tsukawa.ru/backseezer/backend:latest
                container_name: main
                ports:
                  - "3000:3000"
                restart: unless-stopped
                environment:
                  - NODE_ENV=production' > docker-compose.yml

            echo "${{ secrets.HARBOR_PASSWORD }}" | docker login harbor.tsukawa.ru -u ${{ secrets.HARBOR_USERNAME }} --password-stdin
            
            docker compose down -v || true
            docker rmi harbor.tsukawa.ru/backseezer/backend:latest || true
            docker pull harbor.tsukawa.ru/backseezer/backend:latest
            
            # Проверка образа
            docker create --name temp_check harbor.tsukawa.ru/backseezer/backend:latest
            docker cp temp_check:/app/tsconfig.json ./ && echo "tsconfig.json exists" || echo "tsconfig.json missing"
            docker rm temp_check
            
            docker compose up -d --force-recreate
            sleep 15
            
            docker ps -a --filter "name=main"
            docker compose logs --tail=20 main
            
            # Альтернативная проверка здоровья
            if docker exec main curl -s http://localhost:3000; then
              echo "Application is healthy"
            else
              echo "Health check failed"
              docker compose logs main
              exit 1
            fi

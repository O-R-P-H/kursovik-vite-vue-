name: Backend Deployment

on:
  push:
    branches: [backend]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          registry: harbor.tsukawa.ru
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build and push
        run: |
          # Сборка с удалением промежуточных слоёв
          docker buildx build \
            --push \
            --no-cache \
            --tag harbor.tsukawa.ru/backseezer/backend:latest \
            --tag harbor.tsukawa.ru/backseezer/backend:${{ github.sha }} \
            .

          # Очистка старых образов (кроме последних 3)
          docker run --rm \
            -e HARBOR_USERNAME=${{ secrets.HARBOR_USERNAME }} \
            -e HARBOR_PASSWORD=${{ secrets.HARBOR_PASSWORD }} \
            ghcr.io/mayth/go-remove-docker-image \
            --registry=harbor.tsukawa.ru \
            --repo=backseezer/backend \
            --keep=3

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            set -ex
            
            # Подготовка директории
            mkdir -p ~/backend_seezer
            cd ~/backend_seezer
            
            # Обновлённый docker-compose.yml без версии
            cat > docker-compose.yml <<'EOL'
            services:
              main:
                image: harbor.tsukawa.ru/backseezer/backend:latest
                container_name: main
                ports:
                  - "3000:3000"
                restart: unless-stopped
                environment:
                  - NODE_ENV=production
                healthcheck:
                  test: ["CMD", "node", "-e", "require('http').request('http://localhost:3000', res => process.exit(res.statusCode === 200 ? 0 : 1)).end()"]
                  interval: 30s
                  timeout: 10s
                  retries: 3
            EOL

            # Авторизация и деплой
            echo "${{ secrets.HARBOR_PASSWORD }}" | docker login harbor.tsukawa.ru -u ${{ secrets.HARBOR_USERNAME }} --password-stdin
            
            docker compose down -v --remove-orphans || true
            docker pull harbor.tsukawa.ru/backseezer/backend:latest
            docker compose up -d --force-recreate
            
            # Проверка здоровья через встроенный healthcheck
            timeout 60s bash -c 'until docker compose ps --services | grep -q "healthy"; do sleep 5; done' || {
              docker compose logs
              exit 1
            }
            
            # Финальная проверка
            docker compose ps
            echo "Deployment successful!"

name: Backend Deployment

on:
  push:
    branches: backend
  workflow_dispatch:

jobs:
  deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Важно для получения всей истории коммитов

      - name: Log in to Harbor registry
        uses: docker/login-action@v2
        with:
          registry: harbor.tsukawa.ru
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}

      - name: Build and push Docker image
        run: |
          # Собираем с очисткой кэша и проверяем список файлов
          docker build --no-cache -t harbor.tsukawa.ru/backseezer/backend:latest .
          
          # Проверяем содержимое образа (для отладки)
          docker run --rm harbor.tsukawa.ru/backseezer/backend:latest ls -la /app
          
          docker push harbor.tsukawa.ru/backseezer/backend:latest

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            mkdir -p ~/backend_seezer
            cd ~/backend_seezer
            
            # Забираем актуальный docker-compose.yml
            curl -fsSL "https://raw.githubusercontent.com/O-R-P-H/kursovik-vite-vue/backend/docker-compose.yml" -o docker-compose.yml
            
            # Логинимся в Harbor
            echo "${{ secrets.HARBOR_PASSWORD }}" | docker login harbor.tsukawa.ru -u ${{ secrets.HARBOR_USERNAME }} --password-stdin
            
            # Удаляем только контейнер
            docker rm -f main || true
            
            # Удаляем старый образ
            docker rmi harbor.tsukawa.ru/backseezer/backend:latest || true
            
            # Получаем свежий образ
            docker pull harbor.tsukawa.ru/backseezer/backend:latest
            
            # Проверяем содержимое образа перед запуском
            docker create --name temp_check harbor.tsukawa.ru/backseezer/backend:latest
            docker cp temp_check:/app/package.json ./ || echo "ERROR: package.json not found in image!"
            docker rm temp_check
            
            # Запускаем контейнер
            docker compose up -d --no-deps main
            
            # Даем контейнеру время на запуск
            sleep 10
            
            # Проверяем состояние
            docker ps -a --filter "name=main" --format "table {{.ID}}\t{{.Names}}\t{{.Status}}"
            docker compose logs main
